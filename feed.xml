<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://iniyamuraari.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://iniyamuraari.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-08-13T10:09:25+00:00</updated><id>https://iniyamuraari.github.io/feed.xml</id><title type="html">blank</title><subtitle>Iniya Muraari&apos;s personal website</subtitle><entry><title type="html">Lessons for a second year Computing student</title><link href="https://iniyamuraari.github.io/blog/2025/2lessons/" rel="alternate" type="text/html" title="Lessons for a second year Computing student"/><published>2025-08-08T00:32:13+00:00</published><updated>2025-08-08T00:32:13+00:00</updated><id>https://iniyamuraari.github.io/blog/2025/2lessons</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2025/2lessons/"><![CDATA[<p>People told me that the jump from first year to second year was difficult, and naively, I didn’t believe them. Turns out building an operating system, going to all your lectures, joining a new society, dating, and still eating balanced meals is not for the weak. The first blog I wrote - ‘lessons for a first year computing student’ is still useful, but I think there is a different kind of challenge when the novelty of joining university wears off, and you see your friends more in the library than the pub.</p> <ol> <li>When I started my second year, I was determined to go to all my lectures, and honestly, I think I managed it in the first term. The second term was a different story; life hit. It is easy to sit and write about how productive you should be, but it’s not always possible. You should try to go to lectures, try to start coursework when it is set, and try to revise early, but the main point here is trying. Let yourself take breaks and understand that burnout is very possible if you don’t take care of yourself.</li> <li>If you are anything like me, you need the right amount of pressure to work. I found in second year that I would have some quiet weeks and some hectic weeks when every single piece of coursework was due. If I were to redo second year, I would set myself targets and goals for the quiet weeks, so I have enough pressure to get work done and not leave everything for when I am stressed.</li> <li>Moving out of halls into a rental flat is also a big jump. I love being able to walk out of my room to chat to my friends, and having a clean kitchen to cook in. It does mean that you learn how to do adult things, like cleaning mould from the shower ceiling using a scarf as a makeshift mask.</li> <li>Join a new society. I didn’t take advantage of this in first year, but it’s the best thing I did in second year. I tagged along with a friend to the debating society freshers’ event, and now I have a whole new group of friends, I’ve learnt new skills, and I’m on the committee next year!</li> <li>I probably went out more times in freshers week of first year than I did the whole of second year. While my flatmate was not too happy about this (he is a club rat), having so much to do forced me to spend my limited free time doing things I know I enjoy. So, whether it’s going out to the club, organising a dinner potluck, or even just yapping in a cafe, make time for the things you love.</li> <li>In my sporadic effort to stop consuming short-form media, I downloaded and deleted Instagram more times than I would like to admit. Once again, make time for the things you love - scrolling for 6 hours is not one of them.</li> <li>My second year was full of group projects. I mainly worked with my flatmates, which I thoroughly enjoyed, but time management skills were put to the test. Try to find ways to work productively with the people in your team; I found that when I didn’t fully understand the task, my productivity dropped while trying to catch up, and by the time I had understood, we were already on the next task. Speak up when you don’t understand, and take the lead when you are confident.</li> <li>Now for the ghastly word: internships. I was unhappy with my first-year results; I initially took each rejection personally and didn’t think I was good enough. I stopped applying soon after, but I had a wake-up call near the end of second term when suddenly everyone around me had a cool internship offer. Luckily, I started applying properly in time to get an offer with a consulting company, and I’m currently really enjoying my summer working with them. Don’t be disheartened by the rejections, and turn off your LinkedIn notifications (you deserve peace).</li> <li>ChatGPT is your best friend (but also remember that each ChatGPT query releases 4.32 grams of carbon into the air, which is 20x more than a google search).</li> </ol> <p>My second year taught me about balance. I had to deal with personal emergencies and life in general, but I am proud to say I achieved my goal of getting a first. It wasn’t easy, and I have to say thank you to my flatmates, friends, and family for helping me get there.</p>]]></content><author><name></name></author><category term="computing,"/><category term="university"/><summary type="html"><![CDATA[Reflecting on the past year]]></summary></entry><entry><title type="html">Ranking My Second Year Group Projects</title><link href="https://iniyamuraari.github.io/blog/2025/ranking/" rel="alternate" type="text/html" title="Ranking My Second Year Group Projects"/><published>2025-06-28T00:32:13+00:00</published><updated>2025-06-28T00:32:13+00:00</updated><id>https://iniyamuraari.github.io/blog/2025/ranking</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2025/ranking/"><![CDATA[<p>In my second year, I completed three group projects: building an operating system, creating a compiler, and developing an app to solve a real-world problem.</p> <p><strong>1. DRP: Designing For Real People</strong></p> <p>My favourite project of the year was building an app to address a real problem. My group chose to tackle loneliness in young adults. We had four weeks to design, develop, and test our solution. In Week 1, we defined our problem space and researched potential approaches. Weeks 2 and 3 were spent iterating through development cycles, while Week 4 was focused on preparing our final presentation and project leaflet.</p> <p>The entire process was centred around the idea of “Designing for Real People,” meaning that every decision had to be supported by real evidence from potential users. We asked as many of our friends as possible to take part in interviews, demo the app, and provide feedback! At the end of each week, we met with our two supervisors to present our progress and receive marks. I took responsibility for creating these weekly presentations, which significantly improved my presenting skills. This experience proved especially valuable during my summer internship at a consulting company, where I produced many slide decks. I enjoyed the creative freedom this project offered and am excited to apply what I learned in my future career.</p> <p><strong>2. Pintos: Operating System</strong></p> <p>In my first term, I built an operating system, which still feels weird to say. This was by far the most technically challenging project I have ever worked on. Many long days were spent debugging race conditions and keeping a lab helper close by for questions. The project taught me a great deal about resilience. There were several moments when my group felt completely stuck, yet we had to push forward to meet our deadlines.</p> <p>We completed four tasks in total. The first was an individual assignment that lasted one week. I struggled to understand it at first, and my initial approach differed from my friends’. The tests refused to pass until I adjusted my code to match theirs, at which point everything worked. The remaining three tasks were group-based, each lasting three weeks. Marks were awarded partly for passing tests and partly for a design document in which we answered specific questions. At the end of each task, we also had a code review with a supervisor, who assessed the functionality of our code and identified areas of poor design. By the end, we had become adept at avoiding “magic numbers” by defining constants and at writing consistent git commit messages. This project greatly improved my ability to work with an existing codebase and strengthened my understanding of git.</p> <p><strong>3. WACC: Compiler</strong></p> <p>My second term was all about compilers. This project felt intimidating because we started with nothing but an empty base. Although it was not as technically complex as Pintos, I found it harder to grasp the structure and design we needed to implement.</p> <p>Our first task, completed in one week, was a group DevOps assignment. We built a Continuous Delivery pipeline using GitLab CI and gained experience with other tools such as Tsuru and Docker. We later applied this knowledge to set up our own CI/CD pipeline for the remaining WACC tasks. The second task involved building the compiler’s front end, and the third focused on the back end. I struggled to keep up with the pace for these stages and contributed less than I had hoped, although my group had a strong understanding of the material.</p> <p>I particularly enjoyed the fourth task, where we implemented three extensions to our compiler. My focus was on optimising control flow analysis by simplifying or removing redundant indirect branches, eliminating dead code, and improving jump and control structures. I wrote code to generate a control flow graph and used it to ensure only useful code was included in the final output (e.g. removing the definition code for an unused function).</p> <p><strong>Reflections</strong></p> <p>All three of these group projects taught me valuable technical and collaborative skills that I will carry forward into the future. I am grateful to my teammates in each project, as the successes were the result of a team effort.</p>]]></content><author><name></name></author><category term="computing,"/><category term="university,"/><category term="project"/><summary type="html"><![CDATA[Operating Systems, Compilers, and App Development]]></summary></entry><entry><title type="html">3 best books I have read in 2024</title><link href="https://iniyamuraari.github.io/blog/2025/books/" rel="alternate" type="text/html" title="3 best books I have read in 2024"/><published>2025-01-14T00:32:13+00:00</published><updated>2025-01-14T00:32:13+00:00</updated><id>https://iniyamuraari.github.io/blog/2025/books</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2025/books/"><![CDATA[<p><strong>Outliers - Malcolm Gladwell</strong></p> <p>Outliers is an incredible book about success; outlining the luck required to be successful in our society, while incorporating the history of different cultures and countries to examine how people become successful fully. Gladwell dives into the intricacies of success in a myriad of sectors, from sports to transport to education. It is a witty read, full of surprising statistics and in essence, explains how success requires both arduous work and being in the right place at the right time. My favourite bits of writing are when Gladwell compares values and beliefs from different cultures and how they impact success. For example, people from Asian countries are more likely to adopt the belief that success requires hard and strenuous work due to rice being their main crop - rice paddies require significant labour and specialised irrigation systems. Western countries usually grow crops such as wheat, which require large expanses of land yet less work, in fact, periods of rest are necessary for the crop to do well. This translates to the work ethic of these countries and is reflected in their education systems. However, studies have shown that children who take expansive breaks (eg over summer holidays) are less likely to do well in exams after these breaks, and this is why we can see Asian education systems consistently doing better than those in Western countries. He not only compares different cultures but also different socio-economic backgrounds; children from higher classes are more likely to study in their own time over the summer holidays and therefore do better in exams compared to children from lower classes. The book is filled with similar anecdotes that were well researched and explained in detail. I thought it was really interesting and extremely well-written - I would highly recommend it!</p> <p><strong>Design of Everyday Things - Don Norman</strong></p> <p>The ‘Design of Everyday Things’ is about how things we use daily are designed - whether good or bad - and outlines the thought processes designers should have before creating new products. I thought that the most interesting part of the book is when Don Norman rants about different designs which are terrible, and how we as the user are blamed for this lack of thoughtful design. A really funny example is when Norman starts explaining that when you push a ‘pull’ door (and vice versa), it actually isn’t you being stupid, but the design of the door is so bad that it is completely unintuitive. Norman tells us that when we design products, we need to take into account the limitations of the users, and adapt the design to fit their needs, instead of blaming them for their incompetence. I like that Norman structures this book to make it an easy read, while detailing the scientific discipline needed to reach high quality design.</p> <p><strong>Invisible Women - Caroline Criado Perez</strong></p> <p>Invisible Women is the most amazing book on feminism. It is a book full of everyday statistics which show how women are disadvantaged in all walks of life. My favourite section is this passage about a small town in America. One winter, the council decided that there wasn’t enough money in the budget to de-ice the pavements, and allocated this money elsewhere. The rates of hospitalisation due to slips and falls increased, but disproportionately for women! This is because women are much more likely to be holding shopping, helping an elderly relative, or pushing a pram (as they carry out 60% more upaid care work than men), all of which makes it easier for them to fall. I like this example because it highlights so clearly why we need women in governments and councils, to represent women fully, as these institutions make decisions which affect women’s lives in so many ways. I also like the chapter where Perez discusses gender inequality in technology - as this is very relevant to me. This is a sector where lots of data exist, yet it contains the worst inequalities. This is because people in tech value ability and smarts. During interviews, they only look for the person with the best skills for the job, discarding their qualifications / previous experiences, and hypothetically, ignoring their gender and race. However, this thinking that a person is completely unbiased is false, as unconscious bias is prevalent in everyone, including job interviewers. This policy of hiring based only on ability is likely to increase gender inequality, as it allows this bias to slip by, and fosters incorrect stereotypes (eg that men are better at coding than women). Perez mentions a company which did an experiment showing that when a job ad contained a photo of a woman instead of a man, the number of female applicants rose (male applicants were unchanged). This exemplifies the simple changes companies can make to allow women to feel more supported and confident in the tech field. I highly recommend this book to everyone, as it clearly outlines why feminism is so important to our society.</p> <p><strong>Books I want to read in 2025</strong></p> <p>I have begun reading ‘Politics on the Edge’ by Rory Stewart, a book which has made me realise how little I know about the UK government. I have listened to the podcast Stewart is part of - ‘The Rest is Politics’ - so I am excited to understand more about his life, and also how the structure of government really works.</p> <p>I would also like to read ‘Why Nations Fail’, the 2024 Nobel Prize winner for Economics. It details the links between colonisation and failing institutions, which are a well-known marker for a failing nation. I have heard that the book also explores how countries can improve - providing solutions instead of just talking about the problems.</p>]]></content><author><name></name></author><category term="books"/><summary type="html"><![CDATA[Outliers, Design of Everyday Things, and Invisible Women]]></summary></entry><entry><title type="html">IBM Datathon</title><link href="https://iniyamuraari.github.io/blog/2024/datathon/" rel="alternate" type="text/html" title="IBM Datathon"/><published>2024-10-20T21:01:00+00:00</published><updated>2024-10-20T21:01:00+00:00</updated><id>https://iniyamuraari.github.io/blog/2024/datathon</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2024/datathon/"><![CDATA[<p><strong>Preparation</strong></p> <p>We first had to submit an abstract for our project idea, but we weren’t entirely sure what direction to take. We brainstormed a few interesting ideas, but we knew it had to involve a problem that came with a large dataset so we could use the data meaningfully. One of my group members suggested creating a housing tool. It struck a chord with us because we had all experienced the struggles of finding a rental in London this summer.</p> <p>As we dug deeper into the concept, we landed on a more unique idea. Instead of building a tool to help people find houses, we decided to create a tool that allows people to choose the right area to live in within London. Our goal was to let users search for areas based on niche, personalised criteria. The idea was to include options like reducing travel time to specific postcodes, the quality of nearby restaurants and cafes, accessibility of public transport for prams or wheelchairs, school and nursery ratings, and even the percentage of the population speaking a certain language. We wanted to cater to all kinds of needs and make it easier for people to feel at home in their chosen area.</p> <p><strong>On the day</strong></p> <p>Once we had our idea in place, we started looking for datasets to make it happen. We didn’t get much done before the big project day arrived, so a lot of the work was still ahead of us. On the day itself, we spent a considerable amount of time tracking down the right datasets to cover all the criteria we wanted to include. Because of time constraints, we had to narrow down our focus and implement only a few of the original ideas. Unfortunately, the event itself wasn’t the most organized, so we ended up finding a quiet spot in the computing building and dove into the work from there.</p> <p>The best part of the day was the free pizza for lunch! It was around this time that we had finally gathered all our datasets and started coding. We took several breaks throughout the day to check in with one another and ensure we were implementing the different parts of the tool correctly. By the time most of the code was written and the presentation prepped, it was getting late, so we decided to call it a night and head home.</p> <p>After dinner, we tackled the challenge of merging all our code. Despite only having three main sections, combining everything was much more difficult than we anticipated. Thankfully, two of my group members pulled through and stayed up until 4 AM to make sure everything was finished. With the deadline looming at 10 AM, none of us wanted to stay up the full 24 hours, but their hard work made sure our project crossed the finish line.</p> <p><strong>Final submission</strong></p> <p>Our final product was a user interface with which the user could toggle different criteria for locations, and it would return a list of postcodes as well as a map showing the different areas that person would feel comfortable living in.</p> <p><strong>Reflections</strong></p> <p>It was a really enjoyable experience! As my first datathon, it differed significantly from other hackathons due to its heavy focus on data (as the name suggests). This challenge pushed me to brush up on my Python skills and collaborate effectively with a team to create something innovative and exciting.</p>]]></content><author><name></name></author><category term="computing"/><summary type="html"><![CDATA[24 hours of coding]]></summary></entry><entry><title type="html">My Arangetram Experience</title><link href="https://iniyamuraari.github.io/blog/2024/arangetram/" rel="alternate" type="text/html" title="My Arangetram Experience"/><published>2024-08-25T00:32:13+00:00</published><updated>2024-08-25T00:32:13+00:00</updated><id>https://iniyamuraari.github.io/blog/2024/arangetram</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2024/arangetram/"><![CDATA[<p>I have been learning classical Indian dance - Bharatanatyam - for 13 years. I finally performed my arangetram this summer – an event that marks the culmination of years of dedication and the beginning of my journey as a classical dancer. The word “arangetram” translates to “ascending the stage”, symbolizing a dancer’s solo debut and a tradition that celebrates both the dancer’s progress and the art form itself.</p> <p><strong>The Preparation</strong></p> <p>I began rehearsing for my arangetram three years ago, with the original plan to complete it in the summer of 2023. However, with A-levels approaching fast, I decided to postpone the event to the following summer to allow myself more time to practice and enjoy the process. This decision turned out to be a blessing because it gave me the space to focus and fully immerse myself in the preparation.</p> <p>Before starting university, I had weekly lessons with my dance teacher. Once I started my studies, though, finding a space to practice in proved difficult. I ended up using the university squash courts as my rehearsal space! It was quite a challenge, but I managed to keep up with online lessons during term time and in-person sessions whenever I visited home.</p> <p>The real preparation began last summer, during my trip to India. Scouring sari shops for the perfect costumes became an adventure in itself. Eventually, we finally found the perfect saris, and I had four beautiful costumes tailored and stitched for the big day. Wearing those heavy pieces of jewellery, false hair, and layers of makeup was a painful process – but the end result was magical.</p> <p><strong>The Photoshoot</strong></p> <p>The photoshoot made the event feel real. We scheduled it around Easter to create the perfect invites and brochures for the event. The nerves set in, but the photographer was warm and encouraging, and as the session progressed, I began to relax and truly enjoy the moment. The photos turned out beautifully and became a lovely preview of what was to come.</p> <p><strong>The Repertoire</strong></p> <p>For my arangetram, I learned eight dances in total. These dances covered both Nritta (technical dance movements) and Natya (expressions and storytelling), showcasing various Hindu myths; many of which I remember fondly from my childhood. I was incredibly fortunate to have a live orchestra accompanying me. My dance teacher was on the nattuvangam (rhythmic direction), and we had artists playing the mridangam (a type of drum), flute, veena, and vocals. There’s something so special about dancing to live music – it adds an extra layer of connection between the dancer, the musicians, and the audience.</p> <p><strong>The Big Day</strong></p> <p>The day itself went by very quickly. It almost felt like it didn’t happen! My friends and family played such an important role in making sure the event ran smoothly. My sister, in particular, did a beautiful job as the compère, guiding the audience through each performance and the story behind it. My parents were the true masterminds behind the event, working tirelessly to organize everything down to the finest detail. I’m also deeply grateful to my grandparents, aunt, and cousin, who flew from India just to see me perform. Their presence was heartwarming and made the day even more special.</p> <p>Each performance required a quick costume change, and my friends were there every step of the way, helping me switch costumes, reapply makeup, and adjust jewellery. While I was physically exhausted by the end of it – performing in heavy costumes with layers of jewellery is no small feat – the energy and excitement carried me through. The moment I ascended the stage and performed my first dance, all the hard work felt worth it.</p> <p><strong>Reflections</strong></p> <p>Looking back, the arangetram was more than just a performance; it was the culmination of years of learning, dedication, and the support of everyone around me. I am deeply thankful for the guidance of my teacher, who has nurtured my love for dance since the beginning, and for the encouragement of my family and friends, without whom this journey would not have been possible.</p> <p>The arangetram isn’t just an ending but a beginning – it marks the point where I’m no longer just a student but an artist ready to embrace more challenges and opportunities. While the preparation was gruelling and the event itself physically demanding, it has left me with beautiful memories, and the realization that with dedication, anything is possible.</p>]]></content><author><name></name></author><category term="dance,"/><category term="extra-curricular"/><summary type="html"><![CDATA[Completing my dream]]></summary></entry><entry><title type="html">Lessons For A First Year Computing Student</title><link href="https://iniyamuraari.github.io/blog/2024/lessons/" rel="alternate" type="text/html" title="Lessons For A First Year Computing Student"/><published>2024-07-02T00:32:13+00:00</published><updated>2024-07-02T00:32:13+00:00</updated><id>https://iniyamuraari.github.io/blog/2024/lessons</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2024/lessons/"><![CDATA[<p>Starting university can be both exciting and overwhelming. Between coding assignments, making new friends, and just generally keeping yourself alive, university will be a challenge, but I hope my advice helps you navigate your first year.</p> <ol> <li>Start your coursework early and allocate a little bit of time every day to it. It is a lot less stressful than cramming it all the night before, and you will not understand the work as well.</li> <li>Turn up to lectures, and figure out how you best learn. I can’t just listen to lectures because I zone out, and using Notion on my laptop often means I get distracted, so handwritten notes are the best technique for me. Be aware that each lecturer works differently - if they don’t have a clear, concise set of notes you can understand, make your own (either inside the lecture or in your own time).</li> <li>Start revising early, too! Emphasise doing practice questions and past papers. Despite the learning methods being different, university is a lot like school, and the same revision techniques will work.</li> <li>Give yourself time to rest. Especially if you live in student accomodation, you will find someone going out every night.</li> <li>Don’t feel like you have to join them unless you want to - forcing yourself will only lead to a bad night out.</li> <li>Don’t feel bad if you find university hard. You have to study the same amount as high school (with less structure too), feed yourself, make friends, and join societies. As you progress, you’ll settle down into a routine and feel more comfortable. Reach out to your friends, family and university resources when you need help.</li> <li>Computer science students are well known for having no hobbies that don’t involve a screen. Break the stereotype and touch some grass once in a while.</li> <li>Stack overflow is your best friend.</li> <li>Enjoy your year. You will look back at this time fondly and wish you hadn’t taken it for granted.</li> </ol>]]></content><author><name></name></author><category term="computing,"/><category term="university"/><summary type="html"><![CDATA[How to make the most of your first year at university]]></summary></entry><entry><title type="html">Volunteering at IC Hack</title><link href="https://iniyamuraari.github.io/blog/2024/ichack/" rel="alternate" type="text/html" title="Volunteering at IC Hack"/><published>2024-03-17T00:32:13+00:00</published><updated>2024-03-17T00:32:13+00:00</updated><id>https://iniyamuraari.github.io/blog/2024/ichack</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2024/ichack/"><![CDATA[<p>IC hack - the largest student run hackathon in Europe, hosted by Imperial’s own Computing society and my first hackathon experience. Unfortunately, tickets to compete were very hard to come by, so I had to volunteer so I wouldn’t miss out on the biggest event of the year. The biggest perk of IC Hack had to be the insane sponsors. This year we had Marshall Wace, Citadel, Optiver, Terra, Jane Street, JetBrains and more!</p> <p><strong>24 hours of coding</strong></p> <p>The hackathon began with a big welcome talk at Millenium conference centre, and I was on door duty, which ended up being pretty decent as I got to talk to all the sponsors as they arrived.</p> <p>As students flocked to the common rooms, we were in charge of handing out tote bags (and stealing some for ourselves). Luckily I had a friend also volunteering, so the boring jobs like setting chairs up became more fun.</p> <p>The main sponsors got to shape the event by picking the problems teams needed to solve. This made the hackathon all the more interesting, as the problems were designed around their industry, and students could access their APIs to create to their hearts desire.</p> <p><strong>Volunteering: behind the scenes</strong></p> <p>Even though I didn’t compete, volunteering gave me a cool perspective. I got to see how everything ran behind the scenes and help the event run smoothly (and I got a special volunteer’s green t-shirt which made me feel important). Thankfully, the volunteers had a schedule so I didn’t have to work the whole 24 hours, but there were many students who stayed up working on their solutions. My friend group decided to go home and they were definitely more productive after doing so.</p> <p>The constant flow of free food was enough to draw anyone to the event. They had pizza for the volunteers, as well as food trucks for everyone, ranging from burritos to bubble tea. There were tables filled to the brim with snacks and drinks, and I may have stolen too many cans of fanta lemon to take home.</p> <p><strong>Missed talks, but got involved with judging</strong></p> <p>One downside of volunteering instead of competing was that I didn’t get a chance to attend any of the sponsor talks. I definitely plan on making time for those next year.</p> <p>On the bright side, I did get to help Terra with the judging process, which turned out to be one of the most interesting parts of the event. Terra’s challenge focused on improving army performance, asking teams to develop solutions that could enhance the performance and safety of soldiers. It was fascinating to see the range of creative solutions the teams came up with.</p> <p>The winning project was a brilliant <em>**</em>scheduler, tracker, and forecaster for military personnel, offering a way to efficiently manage resources and predict needs in real time. It was a well-deserved win, but there were plenty of other standout ideas too.</p> <p>In my opinion, the most original idea was a mapping tool designed to help soldiers find the safest routes back to base in conflict zones, which may not be the same as the fastest route, especially if the soldier is injured. It combined real-time data with historical patterns to minimise risks on the battlefield, demonstrating how technology can be used in innovative ways to save lives.</p> <p><strong>Final thoughts and reflections</strong></p> <p>As fun as it was to volunteer, it’s hard not to feel a little jealous watching teams build incredible projects, get feedback from top-tier companies, and compete for the win. The experience was unforgettable, but I will be first in line to get a ticket next year.</p> <p>If you’re into tech and haven’t been to a hackathon yet, you should definitely try to attend one, whether as a participant or volunteer. You might even end up helping to shape the future of tech— or at the very least, leave with a backpack full of snacks!</p>]]></content><author><name></name></author><category term="computing,"/><category term="hackathon,"/><category term="university"/><summary type="html"><![CDATA[My experience at the largest student-run hackathon in europe]]></summary></entry><entry><title type="html">First Year Ethics Project</title><link href="https://iniyamuraari.github.io/blog/2024/ethics/" rel="alternate" type="text/html" title="First Year Ethics Project"/><published>2024-02-10T00:32:13+00:00</published><updated>2024-02-10T00:32:13+00:00</updated><id>https://iniyamuraari.github.io/blog/2024/ethics</id><content type="html" xml:base="https://iniyamuraari.github.io/blog/2024/ethics/"><![CDATA[<p>At the end of the Christmas term, we were given group coursework as part of our ethics module. We had to do it with the people in our tutorial, and they had structured it so that all the girls were in groups together (since there are way fewer of us!).</p> <p>I liked my group, but I found they were very quiet. This made collaborating a bit more difficult, especially when sharing ideas and making decisions.</p> <p><strong>Stepping up as a leader</strong></p> <p>The group had an assigned leader, but she couldn’t make it on the first day, so I volunteered to take on the role. This meant I had to delegate tasks and ensure that we stayed on track to meet our deadlines.</p> <p>One of the first steps was picking a topic from a list given to us by the lecturers. We had to choose our top five preferences for a presentation and video project. There were four topics that really sparked my interest, and luckily, my group agreed. However, we weren’t all too sure about the fifth topic we ranked—<em>“Tip jar payments feature on Twitter exposes personal information”</em>—but we included it anyway. Unfortunately, that’s the one we were assigned!</p> <p><strong>Our topic</strong></p> <p>At first glance, the topic seemed straightforward. Exposing personal information is generally regarded as unethical, so we found it more difficult to structure our presentation. However, after some research, we managed to get quite a lot of information that we could use. We had two main points to explain:</p> <ol> <li><em>Problems and Causes</em>: This section focused on the issue of personal information being exposed when people use Twitter’s Tip Jar feature. We looked at the specific causes, including poor design decisions and the lack of adequate data protection measures.</li> <li><em>Ethical and Computing Concerns</em>: Here, we tackled the moral and legal responsibilities companies have when it comes to protecting user data. We also touched on broader concerns around social media profiling and the potential misuse of personal information.</li> </ol> <p>As a group, we not only critiqued Twitter’s approach but also discussed how we would have implemented the feature differently.</p> <p><strong>Reflecting on the group work</strong></p> <p>As part of the assignment, we each had to write an individual essay summarising our research and conclusions. This gave me an opportunity to reflect on what I’d learned, both from the topic itself and from leading the group. I really enjoyed learning about ethics, but I wish we could have researched a more interesting topic; I also very quickly realised that I much prefer coding to making presentations. And, although it wasn’t always easy, stepping up and taking responsibility was a valuable experience.</p>]]></content><author><name></name></author><category term="computing,"/><category term="university"/><summary type="html"><![CDATA[Completing my first group project]]></summary></entry></feed>